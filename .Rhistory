km1$size
# Plot results
plot(data, col =(km1$cluster) , main="K-Means result with 2 clusters", pch=20, cex=2)
#Check for the optimal number of clusters given the data
mydata <- data
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 1:15) wss[i] <- sum(kmeans(mydata, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters with the Elbow Method", pch=20, cex=2)
#Perform K-Means with the optimal number of clusters identified from the Elbow method
set.seed(7)
km2 = kmeans(data, 6, nstart=100)
# Examine the result of the clustering algorithm
km2
# Plot results
col =(km2$cluster +1)
plot(data, col = col , main="K-Means result with 6 clusters", pch=20, cex=2)
points(km2$centers, col=col, pch=19, cex=2)
# To get all the data instances that belong to cluster one you can use the following code
Cluster1Instances = data[km1$cluster == 1, ]
Cluster1Instances
install.packages("XML")
library(XML)
stocks <- c("AXP","BA","CAT","CSCO")
for (s in stocks) {
url <- paste("https://finance.yahoo.com/quote/HD/analysts?p=", s)
webpage <- readLines(url)
html <- htmlTreeParse(webpage, useInternalNodes = TRUE, asText = TRUE)
tableNodes <- getNodeSet(html, "//table")
# ASSIGN TO STOCK NAMED DFS
assign(s, readHTMLTable(tableNodes[[9]],
header= c("data1", "data2", "data3", "data4", "data5", "data6",
"data7", "data8", "data9", "data10", "data11", "data12")))
# ADD COLUMN TO IDENTIFY STOCK
df <- get(s)
df['stock'] <- s
assign(s, df)
}
# COMBINE ALL STOCK DATA
stockdatalist <- cbind(mget(stocks))
stocks <- c("BA","CAT","CSCO")
for (s in stocks) {
url <- paste("https://finance.yahoo.com/quote/HD/analysts?p=", s)
webpage <- readLines(url)
html <- htmlTreeParse(webpage, useInternalNodes = TRUE, asText = TRUE)
tableNodes <- getNodeSet(html, "//table")
# ASSIGN TO STOCK NAMED DFS
assign(s, readHTMLTable(tableNodes[[9]],
header= c("data1", "data2", "data3", "data4", "data5", "data6",
"data7", "data8", "data9", "data10", "data11", "data12")))
# ADD COLUMN TO IDENTIFY STOCK
df <- get(s)
df['stock'] <- s
assign(s, df)
}
# COMBINE ALL STOCK DATA
stockdatalist <- cbind(mget(stocks))
BathSoapData[!complete.cases(BathSoapData),]
setwd("V:/MIS/SEMESTER 2/IDS 572/Assignment 05")
library(readxl)
BathSoapData <- read_excel("BathSoapData.xlsx")
View(BathSoapData)
set.seed(123)
BathSoapData[!complete.cases(BathSoapData),]
BathSoapData <- na.omit(BathSoapData)
BathSoapData$BrCd <- names(BathSoapData[22:30])[max.col(BathSoapData[22:31])]
View(BathSoapData)
BathSoapData$BrCd <- NA
View(BathSoapData)
BathSoapData$BrCd <- NULL
set.seed(123)
View(BathSoapData)
str(BathSoapData)
table(BathSoapData$SEC)
table(BathSoapData$FEH)
table(BathSoapData$MT)
table(BathSoapData$SEX)
table(BathSoapData$AGE)
table(BathSoapData$EDU)
table(BathSoapData$CHILD)
BathSoapData_Brand <- BathSoapData_Brand[,3:6]
View(BathSoapData_Brand)
BathSoapData_Brand <- BathSoapData_Brand[,3:6]
View(BathSoapData_Brand)
BathSoapData_Brand <- BathSoapData[,3:6]
View(BathSoapData_Brand)
BathSoapData_Brand <- BathSoapData[,12:22]
View(BathSoapData_Brand)
BathSoapData_Brand <- BathSoapData[,12:33]
View(BathSoapData_Brand)
BathSoapData_Brand <- BathSoapData[,12:31]
View(BathSoapData_Brand)
BathSoapData_Brand <- NULL
BathSoapData_Brand <- BathSoapData[1]
View(BathSoapData_Brand)
BathSoapData_Brand <- cbind(BathSoapData[,12:31])
View(BathSoapData_Brand)
?cbind
BathSoapData_Brand <- BathSoapData[1]
BathSoapData_Brand <- cbind(BathSoapData[,12:31],)
BathSoapData_Brand <- BathSoapData[1]
BathSoapData_Brand <- cbind(BathSoapData,12:31)
View(BathSoapData_Brand)
BathSoapData_Brand <- BathSoapData[1]
BathSoapData_Brand <- cbind(BathSoapData,BathSoapData[,12:31])
BathSoapData_Brand <- cbind(BathSoapData_Brand,BathSoapData[,12:31])
BathSoapData_Brand <- BathSoapData[1]
BathSoapData_Brand <- cbind(BathSoapData_Brand,BathSoapData[,12:31])
BathSoapData_Brand <- cbind(BathSoapData_Brand,BathSoapData[,12:31)
BathSoapData_Brand <- NULL
BathSoapData_Brand <- BathSoapData[,c(1,12:31)]
set.seed(123)
set.seed(123)
km1 = kmeans(BathSoapData_BrandLoyalty, 4, nstart=100)
BathSoapData_BrandLoyalty <- BathSoapData[,c(1,12:31)]
set.seed(123)
km1 = kmeans(BathSoapData_BrandLoyalty, 4, nstart=100)
km1
km1$cluster
km1$centers
BathSoapData_BrandLoyalty <- BathSoapData[,c(12:31)]
View(BathSoapData_BrandLoyalty)
set.seed(123)
km1 = kmeans(BathSoapData_BrandLoyalty, 4, nstart=100)
km1
km1$withinss
km1$betweenss
km1$size
BathSoapData$maxShareBrand <- BathSoapData[max(BathSoapData[,23:30])]
View(BathSoapData)
BathSoapData$maxShareBrand <- max(BathSoapData[,23:30])
View(BathSoapData)
max(BathSoapData[,23:30])
?max
BathSoapData[,23:30]
BathSoapData$maxShareBrand <- apply(BathSoapData[,23:30],1,max)
View(BathSoapData)
View(BathSoapData_BrandLoyalty)
BathSoapData_BrandLoyalty <- BathSoapData[,c(12:16,19,31,47)]
View(BathSoapData_BrandLoyalty)
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
BathSoapData_BrandLoyalty_norm <- as.data.frame(lapply(BathSoapData_BrandLoyalty, normalize))
View(BathSoapData_BrandLoyalty_norm)
#Check for the optimal value of K
mydata <- BathSoapData_BrandLoyalty_norm
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 1:15) wss[i] <- sum(kmeans(mydata, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters with the Elbow Method", pch=20, cex=2)
#Elbow Point -> 4(Best value of K)
set.seed(123)
km1 = kmeans(BathSoapData_BrandLoyalty_norm, 4, nstart =100)
plot(data, col =(km1$cluster) , main="K-Means result with 4 clusters", pch=20, cex=2)
km1 = kmeans(BathSoapData_BrandLoyalty_norm, 4, nstart =100)
plot(BathSoapData_BrandLoyalty_norm, col =(km1$cluster) , main="K-Means result with 4 clusters", pch=20, cex=2)
hist(BathSoapData$`PropCat 5`)
hist(BathSoapData$`PropCat 12`)
hist(BathSoapData$`PropCat 11`)
hist(BathSoapData$`PropCat 10`)
hist(BathSoapData$`PropCat 9`)
hist(BathSoapData$`PropCat 5`)
hist(BathSoapData$`PropCat 6`)
hist(BathSoapData$`PropCat 7`)
hist(BathSoapData$`PropCat 8`)
hist(BathSoapData$`PropCat 9`)
hist(BathSoapData$`PropCat 10`)
hist(BathSoapData$`PropCat 11`)
hist(BathSoapData$`PropCat 12`)
hist(BathSoapData$`PropCat 5`)
hist(BathSoapData$`PropCat 6`)
hist(BathSoapData$`PropCat 7`)
hist(BathSoapData$`PropCat 8`)
hist(BathSoapData$`PropCat 9`)
hist(BathSoapData$`PropCat 9`)
hist(BathSoapData$`PropCat 10`)
hist(BathSoapData$`PropCat 11`)
hist(BathSoapData$`PropCat 12`)
hist(BathSoapData$`PropCat 5`)
hist(BathSoapData$`PropCat 6`)
plot(density(BathSoapData$`PropCat 5`))
plot(density(BathSoapData$`PropCat 6`))
plot(density(BathSoapData$`PropCat 12`))
plot(density(BathSoapData$`PropCat 11`))
plot(density(BathSoapData$`PropCat 10`))
plot(density(BathSoapData$`PropCat 9`))
hist(BathSoapData$`PropCat 9`)
hist(BathSoapData$`PropCat 8`)
plot(density(BathSoapData$`PropCat 8`))
hist(BathSoapData$`PropCat 6`)
plot(density(BathSoapData$`PropCat 6`))
hist(BathSoapData$`PropCat 7`)
plot(density(BathSoapData$`PropCat 7`))
hist(BathSoapData$`PropCat 6`)
plot(density(BathSoapData$`PropCat 6`))
#PropCat 5(Normal Distributed), PropCat 12(All values between 0.0 and 0.1)
#PropCat 11(Highly noised and maximum values are 0)
#PropCat 10(All values between 0.0 and 0.1 and max is 0.37)
#PropCat 9(90% values are between 0.0 and 0.1)
#PropCat 8(This category can be taken)
#PropCat 7(Distribution is between 0.0 and 1.0)
#PropCat 6(Distribution is between 0.0 and 1.0)
BathSoapData_BrandLoyalty_Part02 <- BathSoapData[,c(20:22,32:35,36:39)]
#PropCat 5(Normal Distributed), PropCat 12(All values between 0.0 and 0.1)
#PropCat 11(Highly noised and maximum values are 0)
#PropCat 10(All values between 0.0 and 0.1 and max is 0.37)
#PropCat 9(90% values are between 0.0 and 0.1)
#PropCat 8(This category can be taken)
#PropCat 7(Distribution is between 0.0 and 1.0)
#PropCat 6(Distribution is between 0.0 and 1.0)
BrandLoyalty_Part02 <- BathSoapData[,c(20:22,32:35,36:39)]
View(BrandLoyalty_Part02)
BrandLoyalty_Part02_norm <- as.data.frame(lapply(BrandLoyalty_Part02, normalize))
View(BrandLoyalty_Part02_norm)
#Check for the optimal value of K
mydata <- BrandLoyalty_Part02_norm
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 1:15) wss[i] <- sum(kmeans(mydata, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters with the Elbow Method", pch=20, cex=2)
#Elbow Point -> 5(Best value of K)
set.seed(123)
km2 = kmeans(BathSoapData_BrandLoyalty_norm, 5, nstart =100)
km2 = kmeans(BathSoapData_BrandLoyalty_norm, 5, nstart =100)
plot(BathSoapData_BrandLoyalty_norm, col =(km2$cluster) , main="K-Means result with 4 clusters", pch=20, cex=2)
BrandLoyalty_Part03 <- BathSoapData[,c(12:16,19:22,31:35,36:39,47)]
BrandLoyalty_Part03_norm <- as.data.frame(lapply(BrandLoyalty_Part03, normalize))
View(BrandLoyalty_Part03_norm)
#Check for the optimal value of K
mydata <- BrandLoyalty_Part03_norm
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 1:15) wss[i] <- sum(kmeans(mydata, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters with the Elbow Method", pch=20, cex=2)
#Elbow Point -> 5(Best value of K)
set.seed(123)
km2 = kmeans(BrandLoyalty_Part02_norm, 5, nstart =100)
plot(BrandLoyalty_Part02_norm, col =(km2$cluster) , main="K-Means result with 4 clusters", pch=20, cex=2)
plot(BrandLoyalty_Part03_norm, col =(km3$cluster) , main="K-Means result with 5 clusters", pch=20, cex=2)
km3
#Elbow Point -> 5(Best value of K)
set.seed(123)
km3 = kmeans(BrandLoyalty_Part03_norm, 5, nstart =100)
plot(BrandLoyalty_Part03_norm, col =(km3$cluster) , main="K-Means result with 5 clusters", pch=20, cex=2)
#Elbow Point -> 4(Best value of K)
set.seed(123)
km10 = kmeans(BathSoapData_BrandLoyalty_norm, 4, nstart =100)
km10$withinss
km10$betweenss
#Elbow Point -> 4(Best value of K)
set.seed(123)
km10 = kmeans(BathSoapData_BrandLoyalty_norm, 4, nstart =100)
km10$withinss
km10$betweenss
km10$withinss
km10$tot.withinss
km10$betweenss
#Elbow Point -> 4(Best value of K)
set.seed(123)
km10 = kmeans(BathSoapData_BrandLoyalty_norm, 4, nstart =100)
km10$withinss
km10$tot.withinss
km10$betweenss #
#Elbow Point -> 5(Best value of K)
set.seed(123)
km11 = kmeans(BathSoapData_BrandLoyalty_norm, 5, nstart =100)
km11$withinss
km11$tot.withinss
km11$betweenss #
#Elbow Point -> 6(Best value of K)
set.seed(123)
km12 = kmeans(BathSoapData_BrandLoyalty_norm, 6, nstart =100)
km12$withinss
km12$tot.withinss
km12$betweenss
#Check for the optimal value of K
mydata <- BrandLoyalty_Part02_norm
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 1:15) wss[i] <- sum(kmeans(mydata, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters with the Elbow Method", pch=20, cex=2)
#Check for the optimal value of K
mydata <- BrandLoyalty_Part02_norm
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 1:15) wss[i] <- sum(kmeans(mydata, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters with the Elbow Method", pch=20, cex=2)
#Elbow Point -> 5(Best value of K)
set.seed(123)
km20 = kmeans(BrandLoyalty_Part02_norm, 5, nstart =100)
#Elbow Point -> 5(Best value of K)
set.seed(123)
km20 = kmeans(BrandLoyalty_Part02_norm, 5, nstart =100)
km20$withinss
km20$tot.withinss
km20$betweenss
#Elbow Point -> 6(Best value of K)
set.seed(123)
km21 = kmeans(BrandLoyalty_Part02_norm, 6, nstart =100)
km21$withinss #10.510302 39.054844  7.863222 52.463688 19.072490
km21$tot.withinss #128.9645
km21$betweenss #180.2902
#Check for the optimal value of K
mydata <- BrandLoyalty_Part03_norm
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 1:15) wss[i] <- sum(kmeans(mydata, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters with the Elbow Method", pch=20, cex=2)
#Elbow Point -> 5(Best value of K)
set.seed(123)
km30 = kmeans(BrandLoyalty_Part03_norm, 5, nstart =100)
km30$withinss #29.293664 21.339164  7.863222 17.598423 32.050746  9.567151
km30$tot.withinss #117.7124
km30$betweenss
#Elbow Point -> 5(Best value of K)
set.seed(123)
km31 = kmeans(BrandLoyalty_Part03_norm, 6, nstart =100)
km31$withinss #95.10459 15.37235 17.39150 54.67866 68.60645
km31$withinss #17.39150 13.76163 14.45552 37.19142 91.42685 60.46742
km31$tot.withinss #251.1535
km31$betweenss #241.5585
View(BrandLoyalty_Part03)
km32 = kmeans(BrandLoyalty_Part03_norm, 7, nstart =100)
km32$withinss #17.39150 13.76163 14.45552 37.19142 91.42685 60.46742
km32$tot.withinss #234.6943
km32$betweenss #258.0177
#Best model on basis of Withinss and Betweenss analysis -> km32
km32
km10
km11 = kmeans(BathSoapData_BrandLoyalty_norm, 5, nstart =100)
km11$withinss #10.761737 16.889353  9.266674 20.417912  8.690840
km11$tot.withinss #66.02652
km11$betweenss #117.4308
km11
#Elbow Point -> 6(Best value of K)
set.seed(123)
km12 = kmeans(BathSoapData_BrandLoyalty_norm, 6, nstart =100)
km12$withinss #7.784544  9.266674  8.690840 14.325473 11.298881  9.470808
km12$tot.withinss #60.83722
km12$betweenss #122.6201
km12
km20
#Elbow Point -> 6(Best value of K)
set.seed(123)
km21 = kmeans(BrandLoyalty_Part02_norm, 6, nstart =100)
km21$withinss #29.293664 21.339164  7.863222 17.598423 32.050746  9.567151
km21$tot.withinss #117.7124
km21$betweenss # 191.5424
km21
#Elbow Point -> 5(Best value of K)
set.seed(123)
km30 = kmeans(BrandLoyalty_Part03_norm, 5, nstart =100)
km30$withinss #95.10459 15.37235 17.39150 54.67866 68.60645
km30$tot.withinss #251.1535
km30$betweenss #241.5585
km30
#Elbow Point -> 6(Best value of K)
set.seed(123)
km31 = kmeans(BrandLoyalty_Part03_norm, 6, nstart =100)
km31$withinss #17.39150 13.76163 14.45552 37.19142 91.42685 60.46742
km31$tot.withinss #234.6943
km31$betweenss #258.0177
km31
#Elbow Point -> 7(Best value of K)
set.seed(123)
km32 = kmeans(BrandLoyalty_Part03_norm, 7, nstart =100)
km32$withinss #54.13046 12.40721 30.28405 57.70315 14.83926 34.84255 15.89515
km32$tot.withinss #220.1018
km32$betweenss #272.6103
km32
#Total clusters: 07
# Plot results
col =(km32$cluster +1)
col
#Total clusters: 07
# Plot results
col =(km32$cluster +1)
plot(BrandLoyalty_Part03_norm, col = col , main="K-Means result with 7 clusters", pch=20, cex=2)
plot(BrandLoyalty_Part03_norm, col = col , main="K-Means result with 7 clusters", pch=20, cex=2)
points(km32$centers, col=col, pch=19, cex=2)
plot(BrandLoyalty_Part03_norm$maxShareBrand, col = col , main="K-Means result with 7 clusters", pch=20, cex=2)
points(km32$centers, col=col, pch=19, cex=2)
plot(BrandLoyalty_Part03_norm$maxShareBrand~BrandLoyalty_Part03_norm$Brand.Runs, col = col , main="K-Means result with 7 clusters", pch=20, cex=2)
#Total clusters: 07
# Plot results
col =(km32$cluster +1)
plot(BrandLoyalty_Part03_norm$maxShareBrand~BrandLoyalty_Part03_norm$Brand.Runs, col = col , main="K-Means result with 7 clusters", pch=20, cex=2)
points(km32$centers, col=col, pch=19, cex=2)
#Total clusters: 07
# Plot results on basis of Max to a Brand to analyse the clusters
plot(BrandLoyalty_Part03_norm$maxShareBrand~BrandLoyalty_Part03_norm$Brand.Runs, col = col , main="K-Means result with 7 clusters", pch=20, cex=2)
#Total clusters: 07
# Plot results on basis of different characteristics to analyse the clusters
plot(BrandLoyalty_Part03_norm$maxShareBrand~BrandLoyalty_Part03_norm$Brand.Runs, col = col , main="K-Means result with 7 clusters", pch=20, cex=2)
plot(BrandLoyalty_Part03_norm , main="K-Means result with 6 clusters", pch=20, cex=2)
plot(BrandLoyalty_Part03_norm , main="K-Means result with 6 clusters", pch=20, cex=2)
plot(BrandLoyalty_Part03_norm,col=km32$cluster, main="K-Means result with 6 clusters", pch=20, cex=2)
fviz_cluster(km32, data = BrandLoyalty_Part03,
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07","orange","yellow","#cc0000"),
ellipse.type = "euclid", # concentration ellipse
star.plot = T, # add segments from centroids to items
repel = F, # avoid label overplotting
ggtheme = theme_minimal())
install.packages("ggplot2")
library(ggplot2)
fviz_cluster(km32, data = BrandLoyalty_Part03,
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07","orange","yellow","#cc0000"),
ellipse.type = "euclid", # concentration ellipse
star.plot = T, # add segments from centroids to items
repel = F, # avoid label overplotting
ggtheme = theme_minimal())
install.packages("FactoMiner")
library(ggplot2)
library(FactoMiner)
library("FactoMiner")
install.packages("Factoextra")
library(factoextra)
#Check for the optimal value of K
mydata <- BrandLoyalty_Part02_norm
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 1:15) wss[i] <- sum(kmeans(mydata, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters with the Elbow Method", pch=20, cex=2)
#Check for the optimal value of K
mydata <- BrandLoyalty_Part02_norm
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 1:15) wss[i] <- sum(kmeans(mydata, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters with the Elbow Method", pch=20, cex=2)
library(cluster)
install.packages("cluster")
install.packages("cluster")
library(cluster)
fviz_cluster(km32, data = BrandLoyalty_Part03,
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07","orange","yellow","#cc0000"),
ellipse.type = "euclid", # concentration ellipse
star.plot = T, # add segments from centroids to items
repel = F, # avoid label overplotting
ggtheme = theme_minimal())
Cluster01 = BathSoapData_BrandLoyalty[km1$cluster == 1, ]
Cluster02 = BathSoapData_BrandLoyalty[km1$cluster == 2, ]
Cluster03 = BathSoapData_BrandLoyalty[km1$cluster == 3, ]
Cluster04 = BathSoapData_BrandLoyalty[km1$cluster == 4, ]
Cluster05 = BathSoapData_BrandLoyalty[km1$cluster == 5, ]
Cluster06 = BathSoapData_BrandLoyalty[km1$cluster == 6, ]
#part 02
# To get all the data instances that belong to these clusters
km12
km12$cluster
km12$centers
Cluster01 = BathSoapData[km1$cluster == 1, ]
Cluster02 = BathSoapData[km1$cluster == 2, ]
Cluster03 = BathSoapData[km1$cluster == 3, ]
Cluster04 = BathSoapData[km1$cluster == 4, ]
Cluster05 = BathSoapData[km1$cluster == 5, ]
Cluster06 = BathSoapData[km1$cluster == 6, ]
Cluster01 = BathSoapData_BrandLoyalty[km1$cluster == 1, ]
Cluster02 = BathSoapData_BrandLoyalty[km1$cluster == 2, ]
Cluster03 = BathSoapData_BrandLoyalty[km1$cluster == 3, ]
Cluster04 = BathSoapData_BrandLoyalty[km1$cluster == 4, ]
Cluster05 = BathSoapData_BrandLoyalty[km1$cluster == 5, ]
Cluster06 = BathSoapData_BrandLoyalty[km1$cluster == 6, ]
Cluster011 = BathSoapData[km1$cluster == 1, ]
Cluster021 = BathSoapData[km1$cluster == 2, ]
Cluster031 = BathSoapData[km1$cluster == 3, ]
Cluster041 = BathSoapData[km1$cluster == 4, ]
Cluster051 = BathSoapData[km1$cluster == 5, ]
Cluster061 = BathSoapData[km1$cluster == 6, ]
View(Cluster011)
table(Cluster011)
View(Cluster021)
View(Cluster031)
View(Cluster041)
mean(BathSoapData$`Affluence Index`)
View(Cluster051)
Cluster051 = BathSoapData[km1$cluster == 5, ]
View(Cluster051)
View(Cluster05)
BathSoapData_BrandLoyalty[km1$cluster == 5, ]
km12$size
km12$cluster
Cluster05 = BathSoapData_BrandLoyalty[km1$cluster == 5, ]
View(Cluster05)
Cluster06 = BathSoapData_BrandLoyalty[km1$cluster == 6, ]
View(Cluster06)
BathSoapData_BrandLoyalty
Cluster01 = BathSoapData_BrandLoyalty[km12$cluster == 1, ]
Cluster02 = BathSoapData_BrandLoyalty[km12$cluster == 2, ]
Cluster03 = BathSoapData_BrandLoyalty[km12$cluster == 3, ]
Cluster04 = BathSoapData_BrandLoyalty[km12$cluster == 4, ]
Cluster05 = BathSoapData_BrandLoyalty[km12$cluster == 5, ]
Cluster06 = BathSoapData_BrandLoyalty[km12$cluster == 6, ]
Cluster011 = BathSoapData[km12$cluster == 1, ]
Cluster021 = BathSoapData[km12$cluster == 2, ]
Cluster031 = BathSoapData[km12$cluster == 3, ]
Cluster041 = BathSoapData[km12$cluster == 4, ]
Cluster051 = BathSoapData[km12$cluster == 5, ]
Cluster061 = BathSoapData[km12$cluster == 6, ]
View(Cluster051)
View(Cluster011)
View(Cluster061)
BrandLoyalty_Part03 <- BathSoapData[,c(12:16,19:22,31:35,36:39,47)]
BrandLoyalty_Part03_norm <- as.data.frame(lapply(BrandLoyalty_Part03, normalize))
#Check for the optimal value of K
mydata <- BrandLoyalty_Part03_norm
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 1:15) wss[i] <- sum(kmeans(mydata, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters with the Elbow Method", pch=20, cex=2)
